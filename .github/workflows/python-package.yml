# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Test

on:
  pull_request:
    branches: [ main ]

  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Chrome
      run: sudo apt-get install -y chromium-browser
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install xserver-xephyr
      run: sudo apt-get install xvfb xserver-xephyr
    - name: Start XVFB
      run: sudo Xvfb -ac :99 -screen 0 1920x1080x24 > /dev/null 2>&1 & # optional, disables headless mode
    - name: Create env file
      run: |
        touch .env
        echo LOGIN_EXIST=${{ secrets.LOGIN_EXIST}} >> .env
        echo PASSWORD_EXIST=${{ secrets.PASSWORD_EXIST}} >> .env
        echo REG_MAIL=${{ secrets.REG_MAIL}} >> .env
        echo REG_NAME=${{ secrets.REG_NAME}} >> .env
        echo REG_SURNAME=${{ secrets.REG_SURNAME}} >> .env
        echo REG_PASSWORD=${{ secrets.REG_PASSWORD}} >> .env
          
    - name: Test with unittest
      run: |
        python run_tests.py
      env:
        DISPLAY: :99

